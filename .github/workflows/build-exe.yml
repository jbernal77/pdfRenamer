name: Build EXE with Icon (PyInstaller + PyQt5)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -r requirements.txt
        
    - name: Inject connection string
      shell: pwsh
      run: |
        $placeholder = '__REPLACE_ME__'
        $cs = @'
        ${{ secrets.AI_CONNECTION_STRING }}
        '@
        
        # Debug: Check if secret exists (without exposing it)
        if ([string]::IsNullOrEmpty($cs.Trim())) {
          Write-Error "AI_CONNECTION_STRING secret is empty or not set"
          exit 1
        }
        
        # Debug: Check if placeholder exists in file
        $content = Get-Content pdf_renamer_tool_v2.4.py -Raw
        if (-not $content.Contains($placeholder)) {
          Write-Error "Placeholder '$placeholder' not found in Python file"
          exit 1
        }
        
        # Perform replacement
        $content -replace [regex]::Escape($placeholder), $cs |
          Set-Content pdf_renamer_tool_v2.4.py -Encoding UTF8
          
        # Verify replacement worked
        $newContent = Get-Content pdf_renamer_tool_v2.4.py -Raw
        if ($newContent.Contains($placeholder)) {
          Write-Error "Replacement failed - placeholder still exists"
          exit 1
        }
        
        Write-Host "Connection string successfully injected"

    - name: Build EXE with icon
      run: pyinstaller pdf_renamer_tool_v2.4.spec

    - name: Upload EXE as artifact
      uses: actions/upload-artifact@v4
      with:
        name: pdf-renamer-tool
        path: dist/pdf_renamer_tool_v2.4.exe
